/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'




// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'

    //    compile 'org.dicta-fnlp:fnlp-core:2.1'

    compile 'commons-lang:commons-lang:2.6'

/*    compile libraries.slf4j_runtime

//    compile libraries.snakeyaml
    compile libraries.supercsv
    compile libraries.poi*/

    compile 'gov.nist.math:jama:1.0.3'
//    for visualize
//    compile group: 'org.deeplearning4j', name: 'deeplearning4j-ui_2.10', version: '0.9.1'

    runtime 'org.deeplearning4j:deeplearning4j-core:0.9.1'
    compile 'org.nd4j:nd4j-common:0.9.1'

//CPU mode : use the first line, GPU mode : use the second line
    compile 'org.nd4j:nd4j-native-platform:0.9.1'
//    compile group: 'org.nd4j', name: 'nd4j-cuda-8.0-platform', version: '0.9.1'

//    compile 'org.datavec:datavec-api:0.9.1'
//    compile 'org.deeplearning4j:deeplearning4j-ui:0.7.2'
    compile 'org.deeplearning4j:deeplearning4j-nlp:0.9.1'
    // compile 'org.deeplearning4j:deeplearning4j:0.7.2'
//    compile 'org.deeplearning4j:deeplearning4j-nlp-uima:0.9.1'
    compile 'org.nd4j:nd4j-buffer:0.9.1'
    compile 'org.deeplearning4j:deeplearning4j-nn:0.9.1'
    compile 'org.nd4j:nd4j-api:0.9.1'

//    another backend for Matrix Ops : MTJ, support sparse vector
    compile 'com.googlecode.matrix-toolkits-java:mtj:1.0.4'
//    java memory measure
    compile 'com.github.jbellis:jamm:0.3.2'

}



